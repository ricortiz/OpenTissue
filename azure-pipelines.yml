# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- master

stages:
- stage: 'Build'
  displayName: 'Build OpenTissue Tests and Demos'

  jobs:
  - job: 'Build'
    displayName: 'Download tools and dependencies'
    pool: 
      vmImage: '$(imageName)'
    
    steps:
    - task: UsePythonVersion@0
      displayName: Get Python for Python tools.
      inputs:
        versionSpec: '3.7'
      name: pyTools

    - bash: |
        if [[ "$OSTYPE" == "darwin"* ]]; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          brew cask install xquartz
          brew install freeglut
          brew install glew
        elif [[ "$OSTYPE" == "linux"* ]]; then
          sudo apt-get install -y freeglut3-dev libglew-dev
        fi    
        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade jinja2
        python -m pip install --upgrade setuptools wheel
        python -m pip install --upgrade conan
        python -m pip install --upgrade gcovr
        conan --version
      displayName: 'Install Python Modules and OS Dependencies'

    - bash: |
        mkdir build
        pushd build
        conan remote add ot_deps https://api.bintray.com/conan/opentissue/Deps
        [[ "$OSTYPE" == "darwin"* ]] && CXX_ABI=libc++ || CXX_ABI=libstdc++11
        conan profile new default --detect
        [[ "$OSTYPE" != "msys" ]] && conan profile update settings.compiler.libcxx=${CXX_ABI} default
        conan install .. -s build_type=Debug -o *:shared=False || exit 1
        popd
      displayName: 'Resolve Dependencies'

    - bash: |
        cmake -DOPENTISSUE_ENABLE_CODE_COVERAGE:BOOL=ON -DCMAKE_BUILD_TYPE=Debug -DOPENTISSUE_ENABLE_UNIT_TESTS=ON -S ${PWD} -B ${PWD}/build || exit 1
        cmake --build ${PWD}/build $([[ "$OSTYPE" != "msys" ]] && echo "--target all") -j 2
      displayName: 'Build Unit Tests'

#   - bash: |
#       if [[ ${OSTYPE} != "msys" ]]; then
#         cmake -DOPENTISSUE_ENABLE_CODE_COVERAGE:BOOL=OFF -DCMAKE_BUILD_TYPE=Debug -DOPENTISSUE_ENABLE_UNIT_TESTS=OFF -DOPENTISSUE_ENABLE_DEMOS=ON -S ${PWD} -B ${PWD}/build || exit 1
#         cmake --build ${PWD}/build $([[ "$OSTYPE" != "msys" ]] && echo "--target all") -j 2
#       fi
#     displayName: 'Build Demos'
      
    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        mac1014:
          imageName: "macOS-10.14"
        VisualStudio2019:
          imageName: "windows-latest"
      maxParallel: 3

- stage: 'Test'
  displayName: 'Run unit tests'
  dependsOn: Build

  jobs:
  - job: 'Test'
    displayName: 'Run ctest'
    pool: 
      vmImage: '$(imageName)'
      
    steps:
    - task: UsePythonVersion@0
      displayName: Get Python for Python tools.
      inputs:
        versionSpec: '3.7'
      name: pyTools

    - bash: |
        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade jinja2
        python -m pip install --upgrade setuptools wheel
        python -m pip install --upgrade conan
        python -m pip install --upgrade gcovr
        conan --version
      displayName: 'Install Python Modules and OS Dependencies'

    - bash: |
        mkdir build
        pushd build
        conan remote add ot_deps https://api.bintray.com/conan/opentissue/Deps
        [[ "$OSTYPE" == "darwin"* ]] && CXX_ABI=libc++ || CXX_ABI=libstdc++11
        conan profile new default --detect
        [[ "$OSTYPE" != "msys" ]] && conan profile update settings.compiler.libcxx=${CXX_ABI} default
        conan install .. -s build_type=Debug -o *:shared=False || exit 1
        popd
      displayName: 'Resolve Dependencies'

    - bash: |
        cmake -DOPENTISSUE_ENABLE_CODE_COVERAGE:BOOL=ON -DCMAKE_BUILD_TYPE=Debug -DOPENTISSUE_ENABLE_UNIT_TESTS=ON -S ${PWD} -B ${PWD}/build
        cmake --build ${PWD}/build $([[ "$OSTYPE" != "msys" ]] && echo "--target all") -j 2
        cmake --build ${PWD}/build --target test -j 2
      displayName: 'Run Unit Tests'

    - bash: |
        ctest -T Test
        [[ "$OSTYPE" != "msys" ]] && ctest -T Coverage
        popd
      displayName: 'Run coverage'

    - bash: |
        cmake --build ${PWD}/build --target Continuous -j 2
      displayName: 'Submit results to dashboard'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: cTest
        testResultsFiles: build/Testing/*/Test.xml
        testRunTitle: 'Publish test results'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/Cobertura.xml'
        pathToSources: '$(System.DefaultWorkingDirectory)/OpenTissue'

    strategy:
      matrix:
        linux:
          imageName: "ubuntu-latest"
        mac1014:
          imageName: "macOS-10.14"
        VisualStudio2019:
          imageName: "windows-latest"
      maxParallel: 3

- stage: 'Package'
  displayName: 'Create OpenTissue package'
  dependsOn: Test

  jobs:
  - job: 'Package'
    displayName: 'Create package'
    pool: 
      vmImage: 'ubuntu-latest'
      
    steps:
    - task: UsePythonVersion@0
      displayName: Get Python for Python tools.
      inputs:
        versionSpec: '3.7'
      name: pyTools

    - bash: |
        python --version
        python -m pip install --upgrade pip
        python -m pip install --upgrade jinja2
        python -m pip install --upgrade setuptools wheel
        python -m pip install --upgrade conan
        python -m pip install --upgrade gcovr
        conan --version
      displayName: 'Install Python Modules'

    - bash: |
        mkdir build
        pushd build
        conan remote add ot_deps https://api.bintray.com/conan/opentissue/Deps
        [[ "$OSTYPE" == "darwin"* ]] && CXX_ABI=libc++ || CXX_ABI=libstdc++11
        conan profile new default --detect
        [[ "$OSTYPE" != "msys" ]] && conan profile update settings.compiler.libcxx=${CXX_ABI} default
        conan install .. -s build_type=Debug -o *:shared=False || exit 1
        popd
      displayName: 'Resolve Dependencies'

    - bash: |
        cmake -DCPACK_GENERATOR="ZIP" -DOPENTISSUE_ENABLE_UNIT_TESTS=OFF -S ${PWD} -B ${PWD}/build
        cmake --build ${PWD}/build --target package
      displayName: 'Package'

    - task: CopyFiles@2
      inputs:
        contents: 'build/OpenTissue-*'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
